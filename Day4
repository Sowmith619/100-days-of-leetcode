//Program 1
//minimum coin change Problem

class Solution {
    public int coinChange(int[] coins, int amount) {
        
  if (amount < 1) return 0;
    int[] dp = new int[amount + 1]; 
    Arrays.fill(dp, Integer.MAX_VALUE);
    dp[0] = 0;
    for (int coin : coins) {
        for (int i = coin; i <= amount; i++) {
            if (dp[i - coin] != Integer.MAX_VALUE) {
                dp[i] = Math.min(dp[i], dp[i - coin] + 1);
            }
        }
    }
    return dp[amount] == Integer.MAX_VALUE ? -1 : dp[amount];
}
}

//Program 2

//given coins of different denomination, computing the minimum number of coins required to make that amount

class Solution {
    public int change(int amount, int[] coins) {

        int[] dp = new int[coins.length];

        for(int coin:coins)
            for(int i=0;i<amount;i++)
            {
                if(i>=coin)
                {
                    arr[i]+=arr[i-coin];
                }
            }

        return arr[amount];

    }}
    
    
