151. Reverse Words in a String
Medium

628

2373

Favorite

Share
Given an input string, reverse the string word by word.

 

Example 1:

Input: "the sky is blue"
Output: "blue is sky the"
Example 2:

Input: "  hello world!  "
Output: "world! hello"
Explanation: Your reversed string should not contain leading or trailing spaces.
Example 3:

Input: "a good   example"
Output: "example good a"
Explanation: You need to reduce multiple spaces between two words to a single space in the reversed string.

sol:

def reverseWords:
  return " ".join(reverse(s.split()))
  
  
  
  Spiral Matrix:
  Given a matrix of m x n elements (m rows, n columns), return all elements of the matrix in spiral order.

Example 1:

Input:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
Output: [1,2,3,6,9,8,7,4,5]

138. Copy List with Random Pointer
Medium

1769

470

Favorite

Share
A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.

Return a deep copy of the list.

 

Example 1:



Input:
{"$id":"1","next":{"$id":"2","next":null,"random":{"$ref":"2"},"val":2},"random":{"$ref":"2"},"val":1}

Explanation:
Node 1's value is 1, both of its next and random pointer points to Node 2.
Node 2's value is 2, its next pointer points to null and its random pointer points to itself.


solution:
"""
# Definition for a Node.
class Node:
    def __init__(self, val, next, random):
        self.val = val
        self.next = next
        self.random = random
"""
class Solution:
    
    def __init__(self):
        self.visitedHash={}
    def copyRandomList(self, head: 'Node') -> 'Node':
        
        if head==None:
            return None
        
        
        if head in self.visitedHash:
            return self.visitedHash[head]
        
        
        node = Node(head.val, None, None)
           
        self.visitedHash[head]=node
        
        node.next = self.copyRandomList(head.next)
        node.random  =self.copyRandomList(head.random)
    
        return node
        
